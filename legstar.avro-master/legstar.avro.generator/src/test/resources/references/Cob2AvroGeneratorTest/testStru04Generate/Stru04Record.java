/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package test.example;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Stru04Record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Stru04Record\",\"namespace\":\"test.example\",\"fields\":[{\"name\":\"comItem1\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":7,\"scale\":2}},{\"name\":\"comArray1\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ComArray1\",\"fields\":[{\"name\":\"comItem2\",\"type\":\"int\"},{\"name\":\"comGroup1\",\"type\":{\"type\":\"record\",\"name\":\"ComGroup1\",\"fields\":[{\"name\":\"comItem3\",\"type\":\"int\"},{\"name\":\"comArray2\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ComArray2\",\"fields\":[{\"name\":\"comItem4\",\"type\":\"string\"},{\"name\":\"comArray3\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"comItem5\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":7,\"scale\":2}}]}}},{\"name\":\"comItem6\",\"type\":\"int\"}]}},{\"name\":\"comItem7\",\"type\":\"int\"}]}}},{\"name\":\"comItem8\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":7,\"scale\":2}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.nio.ByteBuffer comItem1;
  @Deprecated public java.util.List<test.example.ComArray1> comArray1;
  @Deprecated public java.nio.ByteBuffer comItem8;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Stru04Record() {}

  /**
   * All-args constructor.
   */
  public Stru04Record(java.math.BigDecimal comItem1, java.util.List<test.example.ComArray1> comArray1, java.math.BigDecimal comItem8) {
    setComItem1(comItem1);
    setComArray1(comArray1);
    setComItem8(comItem8);
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return comItem1;
    case 1: return comArray1;
    case 2: return comItem8;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: comItem1 = (java.nio.ByteBuffer)value$; break;
    case 1: comArray1 = (java.util.List<test.example.ComArray1>)value$; break;
    case 2: comItem8 = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'comItem1' field.
   */
  public java.math.BigDecimal getComItem1() {
    return new java.math.BigDecimal(new java.math.BigInteger(comItem1.array()), 2);
  }

  /**
   * Sets the value of the 'comItem1' field.
   * @param value the value to set.
   */
  public void setComItem1(java.math.BigDecimal value) {
    this.comItem1 = java.nio.ByteBuffer.wrap(value.unscaledValue().toByteArray());
  }

  /**
   * Gets the value of the 'comArray1' field.
   */
  public java.util.List<test.example.ComArray1> getComArray1() {
    return comArray1;
  }

  /**
   * Sets the value of the 'comArray1' field.
   * @param value the value to set.
   */
  public void setComArray1(java.util.List<test.example.ComArray1> value) {
    this.comArray1 = value;
  }

  /**
   * Gets the value of the 'comItem8' field.
   */
  public java.math.BigDecimal getComItem8() {
    return new java.math.BigDecimal(new java.math.BigInteger(comItem8.array()), 2);
  }

  /**
   * Sets the value of the 'comItem8' field.
   * @param value the value to set.
   */
  public void setComItem8(java.math.BigDecimal value) {
    this.comItem8 = java.nio.ByteBuffer.wrap(value.unscaledValue().toByteArray());
  }

  /** Creates a new Stru04Record RecordBuilder */
  public static test.example.Stru04Record.Builder newBuilder() {
    return new test.example.Stru04Record.Builder();
  }
  
  /** Creates a new Stru04Record RecordBuilder by copying an existing Builder */
  public static test.example.Stru04Record.Builder newBuilder(test.example.Stru04Record.Builder other) {
    return new test.example.Stru04Record.Builder(other);
  }
  
  /** Creates a new Stru04Record RecordBuilder by copying an existing Stru04Record instance */
  public static test.example.Stru04Record.Builder newBuilder(test.example.Stru04Record other) {
    return new test.example.Stru04Record.Builder(other);
  }
  
  /**
   * RecordBuilder for Stru04Record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Stru04Record>
    implements org.apache.avro.data.RecordBuilder<Stru04Record> {

    private java.nio.ByteBuffer comItem1;
    private java.util.List<test.example.ComArray1> comArray1;
    private java.nio.ByteBuffer comItem8;

    /** Creates a new Builder */
    private Builder() {
      super(test.example.Stru04Record.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(test.example.Stru04Record.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.comItem1)) {
        this.comItem1 = data().deepCopy(fields()[0].schema(), other.comItem1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.comArray1)) {
        this.comArray1 = data().deepCopy(fields()[1].schema(), other.comArray1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.comItem8)) {
        this.comItem8 = data().deepCopy(fields()[2].schema(), other.comItem8);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Stru04Record instance */
    private Builder(test.example.Stru04Record other) {
            super(test.example.Stru04Record.SCHEMA$);
      if (isValidValue(fields()[0], other.comItem1)) {
        this.comItem1 = data().deepCopy(fields()[0].schema(), other.comItem1);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.comArray1)) {
        this.comArray1 = data().deepCopy(fields()[1].schema(), other.comArray1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.comItem8)) {
        this.comItem8 = data().deepCopy(fields()[2].schema(), other.comItem8);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'comItem1' field */
    public java.nio.ByteBuffer getComItem1() {
      return comItem1;
    }
    
    /** Sets the value of the 'comItem1' field */
    public test.example.Stru04Record.Builder setComItem1(java.nio.ByteBuffer value) {
      validate(fields()[0], value);
      this.comItem1 = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'comItem1' field has been set */
    public boolean hasComItem1() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'comItem1' field */
    public test.example.Stru04Record.Builder clearComItem1() {
      comItem1 = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'comArray1' field */
    public java.util.List<test.example.ComArray1> getComArray1() {
      return comArray1;
    }
    
    /** Sets the value of the 'comArray1' field */
    public test.example.Stru04Record.Builder setComArray1(java.util.List<test.example.ComArray1> value) {
      validate(fields()[1], value);
      this.comArray1 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'comArray1' field has been set */
    public boolean hasComArray1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'comArray1' field */
    public test.example.Stru04Record.Builder clearComArray1() {
      comArray1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'comItem8' field */
    public java.nio.ByteBuffer getComItem8() {
      return comItem8;
    }
    
    /** Sets the value of the 'comItem8' field */
    public test.example.Stru04Record.Builder setComItem8(java.nio.ByteBuffer value) {
      validate(fields()[2], value);
      this.comItem8 = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'comItem8' field has been set */
    public boolean hasComItem8() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'comItem8' field */
    public test.example.Stru04Record.Builder clearComItem8() {
      comItem8 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Stru04Record build() {
      try {
        Stru04Record record = new Stru04Record();
        record.comItem1 = fieldSetFlags()[0] ? this.comItem1 : (java.nio.ByteBuffer) defaultValue(fields()[0]);
        record.comArray1 = fieldSetFlags()[1] ? this.comArray1 : (java.util.List<test.example.ComArray1>) defaultValue(fields()[1]);
        record.comItem8 = fieldSetFlags()[2] ? this.comItem8 : (java.nio.ByteBuffer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
