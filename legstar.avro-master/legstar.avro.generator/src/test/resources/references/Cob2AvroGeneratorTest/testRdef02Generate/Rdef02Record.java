/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package test.example;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Rdef02Record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Rdef02Record\",\"namespace\":\"test.example\",\"fields\":[{\"name\":\"rdef02Key\",\"type\":{\"type\":\"record\",\"name\":\"Rdef02Key\",\"fields\":[{\"name\":\"rdef02Item1Choice\",\"type\":[\"long\",\"string\"]},{\"name\":\"comSelect\",\"type\":\"int\"}]}},{\"name\":\"comDetail1Choice\",\"type\":[{\"type\":\"record\",\"name\":\"ComDetail1\",\"fields\":[{\"name\":\"comName\",\"type\":\"string\"}]},{\"type\":\"record\",\"name\":\"ComDetail2\",\"fields\":[{\"name\":\"comAmount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":7,\"scale\":2}},{\"name\":\"filler13\",\"type\":\"string\"}]}]},{\"name\":\"comItem3\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":7,\"scale\":2}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public test.example.Rdef02Key rdef02Key;
  @Deprecated public java.lang.Object comDetail1Choice;
  @Deprecated public java.nio.ByteBuffer comItem3;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Rdef02Record() {}

  /**
   * All-args constructor.
   */
  public Rdef02Record(test.example.Rdef02Key rdef02Key, java.lang.Object comDetail1Choice, java.math.BigDecimal comItem3) {
    setRdef02Key(rdef02Key);
    setComDetail1Choice(comDetail1Choice);
    setComItem3(comItem3);
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return rdef02Key;
    case 1: return comDetail1Choice;
    case 2: return comItem3;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: rdef02Key = (test.example.Rdef02Key)value$; break;
    case 1: comDetail1Choice = (java.lang.Object)value$; break;
    case 2: comItem3 = (java.nio.ByteBuffer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rdef02Key' field.
   */
  public test.example.Rdef02Key getRdef02Key() {
    return rdef02Key;
  }

  /**
   * Sets the value of the 'rdef02Key' field.
   * @param value the value to set.
   */
  public void setRdef02Key(test.example.Rdef02Key value) {
    this.rdef02Key = value;
  }

  /**
   * Gets the value of the 'comDetail1Choice' field.
   */
  public java.lang.Object getComDetail1Choice() {
    return comDetail1Choice;
  }

  /**
   * Sets the value of the 'comDetail1Choice' field.
   * @param value the value to set.
   */
  public void setComDetail1Choice(java.lang.Object value) {
    this.comDetail1Choice = value;
  }

  /**
   * Gets the value of the 'comItem3' field.
   */
  public java.math.BigDecimal getComItem3() {
    return new java.math.BigDecimal(new java.math.BigInteger(comItem3.array()), 2);
  }

  /**
   * Sets the value of the 'comItem3' field.
   * @param value the value to set.
   */
  public void setComItem3(java.math.BigDecimal value) {
    this.comItem3 = java.nio.ByteBuffer.wrap(value.unscaledValue().toByteArray());
  }

  /** Creates a new Rdef02Record RecordBuilder */
  public static test.example.Rdef02Record.Builder newBuilder() {
    return new test.example.Rdef02Record.Builder();
  }
  
  /** Creates a new Rdef02Record RecordBuilder by copying an existing Builder */
  public static test.example.Rdef02Record.Builder newBuilder(test.example.Rdef02Record.Builder other) {
    return new test.example.Rdef02Record.Builder(other);
  }
  
  /** Creates a new Rdef02Record RecordBuilder by copying an existing Rdef02Record instance */
  public static test.example.Rdef02Record.Builder newBuilder(test.example.Rdef02Record other) {
    return new test.example.Rdef02Record.Builder(other);
  }
  
  /**
   * RecordBuilder for Rdef02Record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Rdef02Record>
    implements org.apache.avro.data.RecordBuilder<Rdef02Record> {

    private test.example.Rdef02Key rdef02Key;
    private java.lang.Object comDetail1Choice;
    private java.nio.ByteBuffer comItem3;

    /** Creates a new Builder */
    private Builder() {
      super(test.example.Rdef02Record.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(test.example.Rdef02Record.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rdef02Key)) {
        this.rdef02Key = data().deepCopy(fields()[0].schema(), other.rdef02Key);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.comDetail1Choice)) {
        this.comDetail1Choice = data().deepCopy(fields()[1].schema(), other.comDetail1Choice);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.comItem3)) {
        this.comItem3 = data().deepCopy(fields()[2].schema(), other.comItem3);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Rdef02Record instance */
    private Builder(test.example.Rdef02Record other) {
            super(test.example.Rdef02Record.SCHEMA$);
      if (isValidValue(fields()[0], other.rdef02Key)) {
        this.rdef02Key = data().deepCopy(fields()[0].schema(), other.rdef02Key);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.comDetail1Choice)) {
        this.comDetail1Choice = data().deepCopy(fields()[1].schema(), other.comDetail1Choice);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.comItem3)) {
        this.comItem3 = data().deepCopy(fields()[2].schema(), other.comItem3);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'rdef02Key' field */
    public test.example.Rdef02Key getRdef02Key() {
      return rdef02Key;
    }
    
    /** Sets the value of the 'rdef02Key' field */
    public test.example.Rdef02Record.Builder setRdef02Key(test.example.Rdef02Key value) {
      validate(fields()[0], value);
      this.rdef02Key = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'rdef02Key' field has been set */
    public boolean hasRdef02Key() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'rdef02Key' field */
    public test.example.Rdef02Record.Builder clearRdef02Key() {
      rdef02Key = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'comDetail1Choice' field */
    public java.lang.Object getComDetail1Choice() {
      return comDetail1Choice;
    }
    
    /** Sets the value of the 'comDetail1Choice' field */
    public test.example.Rdef02Record.Builder setComDetail1Choice(java.lang.Object value) {
      validate(fields()[1], value);
      this.comDetail1Choice = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'comDetail1Choice' field has been set */
    public boolean hasComDetail1Choice() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'comDetail1Choice' field */
    public test.example.Rdef02Record.Builder clearComDetail1Choice() {
      comDetail1Choice = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'comItem3' field */
    public java.nio.ByteBuffer getComItem3() {
      return comItem3;
    }
    
    /** Sets the value of the 'comItem3' field */
    public test.example.Rdef02Record.Builder setComItem3(java.nio.ByteBuffer value) {
      validate(fields()[2], value);
      this.comItem3 = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'comItem3' field has been set */
    public boolean hasComItem3() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'comItem3' field */
    public test.example.Rdef02Record.Builder clearComItem3() {
      comItem3 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Rdef02Record build() {
      try {
        Rdef02Record record = new Rdef02Record();
        record.rdef02Key = fieldSetFlags()[0] ? this.rdef02Key : (test.example.Rdef02Key) defaultValue(fields()[0]);
        record.comDetail1Choice = fieldSetFlags()[1] ? this.comDetail1Choice : (java.lang.Object) defaultValue(fields()[1]);
        record.comItem3 = fieldSetFlags()[2] ? this.comItem3 : (java.nio.ByteBuffer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
