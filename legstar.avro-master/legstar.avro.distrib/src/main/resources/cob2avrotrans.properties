# ---------------------------------------------------------------------
# COBOL to Avro Generator configuration file
# ---------------------------------------------------------------------

# Java package name prefix for generated avro specific classes
avroPackagePrefix = com.legstar.avro.specific

# ---------------------------------------------------------------------
# cob2trans.properties
# ---------------------------------------------------------------------

# Physical location of the XML schema
xsdFolderName = xsd

# Physical location of the generated sources
srcFolderName = src

# Physical location of the generated binaries
binFolderName = bin

# Physical location of the distribution archive
distFolderName = dist

# Whether to clean the output folders before generatio
cleanFolders = true

# ---------------------------------------------------------------------
# cob2xsd.properties
# ---------------------------------------------------------------------
# FIXED_FORMAT or FREE_FORMAT COBOL source
codeFormat = FIXED_FORMAT

# For fixed format COBOL, position of the indicator area
startColumn = 7

# For fixed format COBOL, position of the right margin
endColumn = 72

# Character set used to encode the COBOL file (uses platform default encoding by default)
#cobolSourceFileEncoding = ISO-8859-1

# Character set used to encode the output XML Schema
xsdEncoding = UTF-8

# Target namespace for generated XML schema
targetNamespace = http://beans.avro.legstar.com

# Whether COBOL conditions (level 88) should be mapped to facets
mapConditionsToFacets = false

# Set to true to prepended parent name in case of name conflict
nameConflictPrependParentName = false

# Set to true if XSD element names should start with an uppercase
elementNamesStartWithUppercase = false

# An optional XSLT transform for XML schema customization
# customXsltFileName = 

# Whether COBOL annotations should be generated
addLegStarAnnotations = true

# Currency sign used (CURRENCY SIGN clause in the SPECIAL-NAMES)
currencySign = $

# Currency symbol used (CURRENCY PICTURE SYMBOL in SPECIAL-NAMES)
currencySymbol = $

# Comma as decimal point (DECIMAL-POINT IS COMMA in SPECIAL-NAMES)
decimalPointIsComma = false

# COBOL NSYMBOL(DBCS) compiler option. NSYMBOL(NATIONAL) if false
nSymbolDbcs = false

# COBOL QUOTE|APOST compiler option. False means APOST
quoteIsQuote = true

# ---------------------------------------------------------------------
# jaxbgen.properties
# ---------------------------------------------------------------------
# Generate isSet methods
generateIsSetMethod = true

# Serializable ID for generated classes
serializableID= 1

# Element names prefix
#elementNamePrefix =

# Element names suffix
#elementNameSuffix =

# Type names prefix
#typeNamePrefix =

# Type names suffix
#typeNameSuffix =

# JAXB package name (inferred from targetNamespace if omitted)
#jaxbPackageName =

# ---------------------------------------------------------------------
# coxbgen.properties
# ---------------------------------------------------------------------

# COXB package name (inferred from jaxbPackageName if omitted)
#coxbPackageName =

# Generate JSON Transformers
isJsonTransformers = false

# Generate XML Transformers
isXmlTransformers = false
